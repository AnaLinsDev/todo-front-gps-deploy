{"version":3,"sources":["redux/user/user.selector.js","pages/home/home.jsx","redux/date/date.selector.js","redux/date/date.types.js","components/calendar/calendar.jsx","redux/date/date.actions.js","redux/tasks/tasks.types.js","components/taskPainel/taskPainel.jsx","redux/tasks/tasks.actions.js","redux/tasks/tasks.selector.js","components/painel/painel.jsx","components/taskPreview/taskPreview.jsx","pages/scheduler/scheduler.jsx","pages/perfil/perfil.jsx","pages/dashboard/dashboard.jsx","redux/user/user.type.js","redux/user/user.actions.js","components/signin/signin.jsx","components/signup/signup.jsx","pages/signin-signup/signin-signup.jsx","components/menu-side-bar/menu-side-bar.jsx","App.js","redux/date/date.reducer.js","redux/tasks/task.utils.js","redux/tasks/tasks.reducer.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["selectUser","createSelector","state","user","userr","mapStateToProps","createStructuredSelector","connect","name","selectSelectedDate","date","selectDate","DateActionTypes","dispatch","setSelectedDate","type","payload","useState","Date","value","setValue","toLocaleDateString","className","onChange","showFixedNumberOfWeeks","TaskActionTypes","removeTask","task","setStatusDowngrade","setStatusUpgrade","handleClick","taskInfo","method","endpoint","level","status","console","log","fetch","id","headers","body","JSON","stringify","title","description","catch","err","onClick","selectTaskList","taskList","Painel","props","newProps","this","setState","then","res","json","out","setTasks","map","Component","addTask","setDate","setTitle","setDescription","required","placeholder","event","target","cols","rows","dateSplit","split","dateOriginal","obj","SchedulerPage","PerfilPage","DiagramsPage","UserActionTypes","addUser","SignIn","handleSubmit","a","preventDefault","email","password","undefined","alert","idLogado","nameLogado","emailLogado","handleChange","onSubmit","React","SignUp","displayName","confirmPassword","SignInSignUpPage","menuCollapse","setMenuCollapse","collapsed","iconShape","active","icon","to","App","exact","path","component","HomePage","render","INITIAL_STATE","selectedDateReducer","action","addTaskToList","listOfTasks","taskToAdd","removeTaskToList","taskToRemove","filter","t","taskReducer","userReducer","persistConfig","key","storage","rootReducer","combineReducers","persistReducer","middlewarers","logger","store","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c9e7742.chunk.js","sourcesContent":["import {createSelector} from 'reselect'\r\n\r\nconst theUser = state => state.user\r\n\r\nexport const selectUser = createSelector(\r\n    [theUser],\r\n    (userr) => userr.user\r\n)","import React from 'react';\r\nimport './home.scss'\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {selectUser} from '../../redux/user/user.selector'\r\nimport {createStructuredSelector} from 'reselect'\r\n\r\nconst HomePage = ({user}) => (\r\n    <div>\r\n        <h1>Bem vindo(a)  { user.name }</h1>\r\n    </div>\r\n);\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user : selectUser\r\n    })\r\n\r\n  \r\nexport default connect(mapStateToProps)(HomePage)\r\n//export default HomePage","import {createSelector} from 'reselect'\r\n\r\nconst selectDate = state => state.date\r\n\r\nexport const selectSelectedDate = createSelector(\r\n    [selectDate],\r\n    (date) => date.selectDate\r\n)","export const DateActionTypes = {\r\n    SET_SELECTED_DATE: 'SET_SELECTED_DATE'\r\n}","import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport './calendar.scss'\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {selectSelectedDate} from '../../redux/date/date.selector'\r\nimport {createStructuredSelector} from 'reselect'\r\nimport { setSelectedDate } from '../../redux/date/date.actions';\r\n\r\n\r\nfunction CalendarComponent({date, setSelectedDate}){\r\n  \r\nconst [value, setValue] = useState(new Date())\r\n\r\nsetSelectedDate(value.toLocaleDateString())\r\n  \r\nreturn(\r\n      <div className='calendar'>\r\n      <Calendar\r\n        onChange={setValue}\r\n        value={value}\r\n        showFixedNumberOfWeeks={true}\r\n      />\r\n      </div>\r\n)\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n   date : selectSelectedDate\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedDate: date => dispatch( setSelectedDate(date) )\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarComponent)\r\n","import {DateActionTypes} from './date.types'\r\n\r\nexport const setSelectedDate = date => ({\r\n    type: DateActionTypes.SET_SELECTED_DATE,\r\n    payload: date\r\n})","export const TaskActionTypes = {\r\n    SET_TASKS: 'SET_TASKS',\r\n    ADD_TASK: 'ADD_TASK',\r\n    REMOVE_TASK:'REMOVE_TASK',\r\n    SET_STATUS_DOWNGRADE:'SET_STATUS_DOWNGRADE',\r\n    SET_STATUS_UPGRADE:'SET_STATUS_UPGRADE',\r\n}","import React from 'react';\r\nimport './taskPainel.scss'\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\r\nimport { HiCheck } from \"react-icons/hi\";\r\nimport { RiReplyLine } from \"react-icons/ri\";\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { removeTask, setStatusDowngrade, setStatusUpgrade } from '../../redux/tasks/tasks.actions';\r\nimport {selectUser} from '../../redux/user/user.selector'\r\nimport {createStructuredSelector} from 'reselect'\r\n\r\n\r\nfunction TaskPainel({task, user, removeTask, setStatusDowngrade, setStatusUpgrade}){\r\n\r\n    const handleClick = (taskInfo, method, endpoint, level=null) => {\r\n\r\n      if (level == 'up') {\r\n        setStatusUpgrade(taskInfo)\r\n        if     (taskInfo.status == 'DOING') { taskInfo.status = 'DONE' }\r\n        else if (taskInfo.status == 'TODO') { taskInfo.status = 'DOING'}\r\n      }\r\n     else if (level == 'down'){\r\n        setStatusDowngrade(taskInfo)\r\n        if     (taskInfo.status == 'DOING'){ taskInfo.status = 'TODO' }\r\n        else if (taskInfo.status == 'DONE'){ taskInfo.status = 'DOING'}\r\n      }\r\n\r\n      console.log('-----------------------------------')\r\n      console.log('-----------------------------------')\r\n      console.log('endpoint: ' + endpoint + '  method: ' + method)\r\n      console.log('body: ' + taskInfo.status)\r\n      console.log('-----------------------------------')\r\n      console.log('-----------------------------------')\r\n\r\n      fetch(`https://gps-back-spring-ifeito.herokuapp.com/usuario/${user.id}/${endpoint}/${taskInfo.id}`,\r\n         { \r\n          method: method ,\r\n          headers: {\"Content-type\": \"application/json\"},\r\n          body: JSON.stringify({\r\n            id : taskInfo.id,\r\n            title : taskInfo.title,\r\n            description : taskInfo.description,\r\n            status : taskInfo.status,\r\n            date : taskInfo.date\r\n          })\r\n        })\r\n         .catch(err => { throw  err })\r\n\r\n      }\r\n      \r\n\r\n\r\n    return (\r\n    <div className='task-painel'>\r\n    {\r\n    task.status == \"DOING\"\r\n     ? \r\n    <div className = 'icons-sup'>\r\n\r\n    <RiReplyLine className='undone icon' \r\n    onClick={() => {handleClick(task, 'PUT', 'atualizartask', 'down')}}/> \r\n\r\n    <HiCheck className='done icon'\r\n    onClick={() => {handleClick(task, 'PUT', 'atualizartask', 'up')}} />\r\n    \r\n    </div>\r\n    : task.status == \"TODO\" ?\r\n    <div className = 'icons-sup-right'>\r\n    <HiCheck className='done icon'\r\n    onClick={() => {handleClick(task, 'PUT', 'atualizartask', 'up')}} />\r\n    </div>\r\n    :\r\n    <div className = 'icons-sup'>\r\n\r\n    <RiReplyLine className='undone icon' \r\n    onClick={() => {handleClick(task, 'PUT', 'atualizartask', 'down')}}/> \r\n    </div>\r\n    }\r\n\r\n     <h2>{task.title} </h2>\r\n     <p>{task.description}</p>\r\n     <div className = 'icons-inf'>\r\n\r\n     <RiDeleteBin5Line className='delete icon' \r\n     onClick={() => {handleClick(task, 'DELETE', 'removertask'); removeTask(task)}} />\r\n\r\n     {/* <BiEditAlt  className='update icon'/> */}\r\n\r\n     </div>\r\n    </div>\r\n    )}\r\n\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  user : selectUser,\r\n  })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  removeTask: task => dispatch(removeTask(task)) ,\r\n  setStatusDowngrade: task => dispatch(setStatusDowngrade(task)) ,\r\n  setStatusUpgrade: task => dispatch(setStatusUpgrade(task)) \r\n  })\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskPainel)","import {TaskActionTypes} from './tasks.types'\r\n\r\nexport const setTasks = (task) => ({\r\n    type: TaskActionTypes.SET_TASKS,\r\n    payload: task\r\n})\r\n\r\nexport const addTask = (task) => ({\r\n    type: TaskActionTypes.ADD_TASK,\r\n    payload: task\r\n})\r\n\r\nexport const removeTask = (task) => ({\r\n    type: TaskActionTypes.REMOVE_TASK,\r\n    payload: task\r\n})\r\n\r\nexport const setStatusDowngrade = (task) => ({\r\n    type: TaskActionTypes.SET_STATUS_DOWNGRADE,\r\n    payload: task\r\n})\r\n\r\nexport const setStatusUpgrade = (task) => ({\r\n    type: TaskActionTypes.SET_STATUS_UPGRADE,\r\n    payload: task\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import {createSelector} from 'reselect'\r\n\r\nconst selectTask = state => state.task\r\n\r\nexport const selectTaskList = createSelector(\r\n    [selectTask],\r\n    (task) => task.taskList\r\n)","import React, { Component } from 'react';\r\nimport TaskPainel from '../taskPainel/taskPainel';\r\nimport './painel.scss'\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {selectSelectedDate} from '../../redux/date/date.selector'\r\nimport {selectTaskList} from '../../redux/tasks/tasks.selector'\r\nimport {selectUser} from '../../redux/user/user.selector'\r\nimport {setTasks} from '../../redux/tasks/tasks.actions'\r\nimport {createStructuredSelector} from 'reselect'\r\n\r\nclass Painel extends Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n        task : [],\r\n    \r\n    }\r\n}\r\n\r\nUNSAFE_componentWillReceiveProps(newProps){\r\n    this.setState( { task : newProps.task} )\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n    console.log(\"ENTROU componentDidMount PAINEL\")\r\n\r\n    fetch(`https://gps-back-spring-ifeito.herokuapp.com/usuario/${this.props.user.id}/tasks`, \r\n    { method: 'GET' })\r\n    .then (res => res.json() )\r\n    .then (out => {\r\n        this.setState({task : out})\r\n    })\r\n    .catch(err => { throw  err })\r\n   \r\n}\r\n\r\n\r\n\r\nrender(){\r\n\r\n    console.log(\"ENTROU RENDER PAINEL\")\r\n    const date  = this.props.date;\r\n    const task  = this.state.task;\r\n\r\n    this.props.setTasks(task)\r\n\r\n    return (\r\n\r\n    <div className='painel'>\r\n    <h1> Date  {date}</h1>\r\n    <div className='painel-main'>\r\n\r\n        <div className='painel-colunm'>\r\n            <p className='type'>TODO</p>\r\n            <div className='painel-colunm-tasks'>\r\n                {task.map(task => (task.status == \"TODO\" && task.date == date ? <TaskPainel key={task.id} task = {task}/> : ''))}\r\n            </div>\r\n        </div>\r\n\r\n        <div className='painel-colunm'>\r\n            <p className='type'>DOING</p>\r\n            <div className='painel-colunm-tasks'>\r\n                {task.map(task => (task.status == \"DOING\" && task.date == date ? <TaskPainel key={task.id} task = {task}/> : ''))}\r\n            </div>\r\n        </div>\r\n\r\n        <div className='painel-colunm'>\r\n            <p className='type'>DONE</p>\r\n            <div className='painel-colunm-tasks'>\r\n                {task.map(task => (task.status == \"DONE\" && task.date == date ? <TaskPainel key={task.id} task = {task}/> : ''))}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user : selectUser,\r\n    date : selectSelectedDate, \r\n    task : selectTaskList\r\n    })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setTasks: task => dispatch(setTasks(task)) \r\n  })\r\n\r\n export default connect(mapStateToProps, mapDispatchToProps)(Painel)\r\n\r\n","import React, { useState } from \"react\";\r\nimport \"./taskPreview.scss\";\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { addTask } from '../../redux/tasks/tasks.actions';\r\nimport {selectUser} from '../../redux/user/user.selector'\r\nimport {createStructuredSelector} from 'reselect'\r\n\r\nfunction TaskPreview ({addTask, user}){\r\n\r\n  const [date, setDate] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  const [response, setResponse] = useState('')\r\n\r\n  const handleClick = () => {\r\n\r\n    const dateSplit = date.split('-')\r\n    const dateOriginal = dateSplit[2] + '/' + dateSplit[1] + '/' + dateSplit[0]\r\n\r\n    const task = {\r\n      title : title,\r\n      description : description,\r\n      date :  dateOriginal,\r\n      status : 'TODO'\r\n    }\r\n\r\n    fetch(`https://gps-back-spring-ifeito.herokuapp.com/usuario/adicionartask/${user.id}`,\r\n       { \r\n        method: 'POST' ,\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          title : task.title,\r\n          description : task.description,\r\n          status : task.status,\r\n          date : task.date\r\n        })\r\n      })\r\n       .then( res => res.json())\r\n       .then( obj => addTask(obj))\r\n       .catch(err => { throw  err })\r\n    }\r\n\r\n  return(\r\n  <div className=\"task-preview\">\r\n    <div className=\"create-task-title\">\r\n      <h2>Task</h2>\r\n    </div>\r\n    <form className=\"task-form\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        id=\"form-title\"\r\n        required\r\n        placeholder=\"Title\"\r\n        onChange={event => setTitle(event.target.value)}      />\r\n\r\n      <textarea\r\n        name=\"description\"\r\n        id=\"description\"\r\n        placeholder=\"Description\"\r\n        required\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        onChange={event => setDescription(event.target.value)}      ></textarea>\r\n      <div className=\"form-date\">\r\n      <input  \r\n          required \r\n          type=\"date\" \r\n          name=\"date\" \r\n          id=\"date\" \r\n          onChange={event => setDate(event.target.value)}\r\n      />\r\n      </div>\r\n      \r\n      <button type=\"button\" className=\"btn-send\"\r\n          onClick={() => {handleClick()}} \r\n          >Add to Painel</button>\r\n    </form>\r\n  </div>\r\n  )}\r\n\r\n  const mapStateToProps = createStructuredSelector({\r\n    user : selectUser,\r\n    })\r\n\r\n  const mapDispatchToProps = dispatch => ({\r\n    addTask: task => dispatch(addTask(task)) ,\r\n    })\r\n    \r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskPreview)\r\n\r\n","import React, { Component } from 'react';\r\nimport './scheduler.scss'\r\n\r\nimport CalendarComponent from '../../components/calendar/calendar';\r\nimport Painel from '../../components/painel/painel';\r\nimport TaskPreview from '../../components/taskPreview/taskPreview'\r\n\r\n\r\nconst SchedulerPage = () => {\r\n\r\n\r\n    return (\r\n    <div className='scheduler'>\r\n    <div className='calendar-task'>\r\n        <CalendarComponent />\r\n        <TaskPreview />\r\n    </div>\r\n    <Painel className='painel'/>\r\n    </div>\r\n    )\r\n    }\r\n\r\n   export default SchedulerPage\r\n","import React from 'react';\r\nimport './perfil.scss'\r\n\r\nconst PerfilPage = () => (\r\n    <div>\r\n        <h1>PERFIL !!!</h1>\r\n    </div>\r\n);\r\n\r\nexport default PerfilPage","import React from 'react';\r\nimport './dashboard.scss'\r\n\r\nconst DiagramsPage = () => (\r\n    <div>\r\n        <h1>Dashboard !!!</h1>\r\n    </div>\r\n);\r\n\r\nexport default DiagramsPage","export const UserActionTypes = {\r\n    ADD_USER: 'ADD_USER',\r\n}","import {UserActionTypes} from './user.type'\r\n\r\nexport const addUser = (user) => (\r\n    {\r\n        type: UserActionTypes.ADD_USER,\r\n        payload: user\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './signin.scss'\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { addUser } from '../../redux/user/user.actions';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n\r\n            idLogado: '',\r\n            nameLogado : '' , \r\n            emailLogado : ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        // Quando o usuário apertar em \"SIGN IN\", virá para cá\r\n        event.preventDefault()\r\n\r\n        // o this state está com os valores digitas por conta do handleChange\r\n        const {email, password} = this.state\r\n\r\n        fetch(`https://gps-back-spring-ifeito.herokuapp.com/usuario/login`,\r\n        { \r\n         method: 'POST' ,\r\n         headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n         body: JSON.stringify({\r\n            name     :       '',\r\n            email    :       email,\r\n            password :       password\r\n         })\r\n       })\r\n       .then( res =>  res.json())\r\n       .then( obj => (obj.name  == '' || obj.name == undefined) ? alert(\" Email ou senha incorretos !! \") : this.setState({ idLogado: obj.id ,nameLogado : obj.name , emailLogado : obj.email}))\r\n       .catch(err => { alert(\"Error: \" + err); })\r\n    }\r\n\r\n    handleChange = event => {\r\n        // Toda vez que o input for alterado, o state receberá o valor\r\n        const {value, name} = event.target\r\n        \r\n        this.setState({[name]: value })\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        this.props.addUser({id: this.state.idLogado, name: this.state.nameLogado, email : this.state.emailLogado})\r\n\r\n        return(\r\n        <div className='sign-in'>\r\n                <h2 className='title'>I already have a account</h2>\r\n                <span> Sign in with you email and password</span>\r\n\r\n                <form className='form' onSubmit={this.handleSubmit}>\r\n                    <div className='celula'>\r\n                        <label className='label'>Email: </label>\r\n                        <input \r\n                        className='input'\r\n                        name='email' \r\n                        type='email' \r\n                        onChange={this.handleChange} \r\n                        required/>\r\n                    </div>\r\n                    <div className='celula'>\r\n                        <label className='label'>Password: </label>  \r\n                        <input\r\n                        className='input'\r\n                        name='password' \r\n                        type='password' \r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    </div>\r\n\r\n                    <div className='buttons'>\r\n                        <button className='custom-button' type='submit'>SIGN IN </button>\r\n                    </div> \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addUser: user => dispatch(addUser(user)) \r\n    })\r\n    \r\nexport default connect(null, mapDispatchToProps)(SignIn)\r\n\r\n","import React from 'react';\r\nimport './signup.scss'\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { addUser } from '../../redux/user/user.actions';\r\n\r\n\r\nclass SignUp extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            displayName     : '',\r\n            email           : '',\r\n            password        : '',\r\n            confirmPassword : '',\r\n\r\n            idLogado: '',\r\n            nameLogado      : '',\r\n            emailLogado     : ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n \r\n        const user = {\r\n            displayName : this.state.displayName,\r\n            email : this.state.email,\r\n            password : this.state.password,\r\n            confirmPassword : this.state.confirmPassword\r\n        }\r\n\r\n        this.setState({\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n          });\r\n\r\n        if (user.password != user.confirmPassword) {\r\n            console.log( user.password + \" --- \" + user.confirmPassword)\r\n            alert(\"passwords don't match\");\r\n            return;\r\n          }else{\r\n\r\n        fetch(`https://gps-back-spring-ifeito.herokuapp.com/usuario/criarusuario`,\r\n        { \r\n         method: 'POST' ,\r\n         headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n         body: JSON.stringify({\r\n            name :        user.displayName,\r\n            email :       user.email,\r\n            password :    user.password\r\n         })\r\n\r\n       })\r\n        .then( res => res.json())\r\n        .then( obj => this.setState({ idLogado: obj.id , nameLogado : obj.name , emailLogado : obj.email}))\r\n        .catch(err => { alert(\"Error: \" + err); })\r\n\r\n    }\r\n      };\r\n\r\n    handleChange = event => {\r\n       // Toda vez que o input for alterado, o state receberá o valor\r\n        const { name, value } = event.target\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        this.props.addUser({id: this.state.idLogado, name: this.state.nameLogado, email : this.state.emailLogado})\r\n\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'>I do not have a account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                \r\n                <form className='form' onSubmit={this.handleSubmit}>\r\n                <div className='celula'>\r\n                        <label className='label'>Name: </label>\r\n                        <input \r\n                        className='input'\r\n                        name='displayName' \r\n                        type='text' \r\n                        onChange={this.handleChange} \r\n                        required/>\r\n                    </div>\r\n                    <div className='celula'>\r\n                        <label className='label'>Email: </label>\r\n                        <input \r\n                        className='input'\r\n                        name='email' \r\n                        type='email' \r\n                        onChange={this.handleChange} \r\n                        required/>\r\n                    </div>\r\n                    <div className='celula'>\r\n                        <label className='label'>Password: </label>  \r\n                        <input\r\n                        className='input'\r\n                        name='password' \r\n                        type='password' \r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    </div>\r\n                    <div className='celula'>\r\n                        <label className='label'>Confirm Password: </label>\r\n                        <input \r\n                        className='input'\r\n                        name='confirmPassword' \r\n                        type='password' \r\n                        onChange={this.handleChange} \r\n                        required/>\r\n                    </div>\r\n                    <div className='buttons'>\r\n                        <button className='custom-button' type='submit'\r\n                                  onClick={this.handleClick}\r\n                                  >SIGN UP </button>\r\n                    </div> \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addUser: user => dispatch(addUser(user)) \r\n    })\r\n    \r\nexport default connect(null, mapDispatchToProps)(SignUp)\r\n","import React from 'react';\r\nimport './signin-signup.scss'\r\n\r\nimport SignIn from '../../components/signin/signin';\r\nimport SignUp from '../../components/signup/signup';\r\n\r\nconst SignInSignUpPage = () => (\r\n    <div className='sign-in-and-sign-up'>\r\n        <SignIn />\r\n        <SignUp />\r\n    </div>\r\n);\r\n\r\nexport default SignInSignUpPage","import {\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SidebarHeader,\r\n  SidebarFooter,\r\n  SidebarContent,\r\n} from \"react-pro-sidebar\";\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\n\r\nimport { FaList, FaRegHeart } from \"react-icons/fa\";\r\nimport { FiHome, FiLogOut, FiArrowLeftCircle, FiArrowRightCircle } from \"react-icons/fi\";\r\nimport { RiPencilLine } from \"react-icons/ri\";\r\nimport { BiArrowToRight } from \"react-icons/bi\";\r\nimport { BsFillBarChartFill } from \"react-icons/bs\";\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport  './menu-side-bar.scss'\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {selectUser} from '../../redux/user/user.selector'\r\nimport { addUser } from '../../redux/user/user.actions';\r\nimport {createStructuredSelector} from 'reselect'\r\n\r\nfunction MenuSideBar({user, addUser}) {\r\n\r\n  const [menuCollapse, setMenuCollapse] = useState(false);\r\n\r\n  const menuIconClick = () => {\r\n    menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true);\r\n  };\r\n\r\n  console.log(\"USUARIO : \" +  user.name)\r\n\r\n  function logOut(){\r\n      addUser({\r\n        name: '',\r\n        email: ''\r\n    })\r\n  }\r\n\r\n  return(\r\n\r\n        <div className='menu'>\r\n        <ProSidebar \r\n        collapsed = {menuCollapse} >\r\n          <SidebarHeader >\r\n          <div className=\"logotext\" >\r\n          \r\n              <h1>{menuCollapse ? <p>GPS</p> : <p ><BsFillBarChartFill className='big-icon'/>  Planner </p>}</h1>\r\n            </div>\r\n            <div className=\"closemenu\" onClick={menuIconClick}>\r\n\r\n              {menuCollapse ? (\r\n                <FiArrowRightCircle className='arrow-icon'/>\r\n              ) : (\r\n                <FiArrowLeftCircle  className='arrow-icon'/>\r\n              )}\r\n            </div>\r\n          </SidebarHeader>\r\n          <SidebarContent >\r\n            <Menu iconShape=\"square\">\r\n              <MenuItem active={true} icon={<FiHome />} className='menu-item'>Home<Link to=\"/\" /></MenuItem>\r\n              <MenuItem icon={<FaList />} className='menu-item'>Dashboards<Link to=\"/dashboard\" /></MenuItem>\r\n              <MenuItem icon={<FaRegHeart />} className='menu-item'>Perfil<Link to=\"/perfil\" /></MenuItem>\r\n              <MenuItem icon={<RiPencilLine />} className='menu-item'>Calendar Planner<Link to=\"/scheduler\" /></MenuItem>\r\n            </Menu>\r\n          </SidebarContent>\r\n\r\n          {/* AQUI SÓ VAI FUNCIONAR MESMO QUANDO O USUARIO ESTIVER FUNCIONANDO NO BACK E FRONT */}\r\n          <SidebarFooter >\r\n            <Menu iconShape=\"square\">\r\n              {user.name == '' && user.email == ''\r\n              ?  <MenuItem icon={<BiArrowToRight   />}  className='menu-item'>Sign In or Sign Up <Link to=\"/signin-signup\" /></MenuItem>\r\n              :  <MenuItem icon={<FiLogOut/>} className='menu-item' onClick={() => logOut()}>Logout</MenuItem>   \r\n              }\r\n              \r\n            </Menu>\r\n          </SidebarFooter>\r\n        </ProSidebar>\r\n        </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  user : selectUser\r\n  })\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addUser: user => dispatch(addUser(user)) \r\n  })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuSideBar)\r\n//export default MenuSideBar","import './App.css';\nimport React, { Component } from 'react';\n\nimport { Switch, Route, Redirect, BrowserRouter as Router} from 'react-router-dom';\n\nimport HomePage from './pages/home/home';\nimport SchedulerPage from './pages/scheduler/scheduler';\nimport PerfilPage from './pages/perfil/perfil';\nimport DiagramsPage from './pages/dashboard/dashboard'\nimport SignInSignUpPage from './pages/signin-signup/signin-signup';\n\nimport MenuSideBar from './components/menu-side-bar/menu-side-bar'\n\n//redux\nimport { connect } from 'react-redux';\nimport {selectUser} from './redux/user/user.selector'\nimport {createStructuredSelector} from 'reselect'\n\nclass App extends Component {\n\n  render(){\n\n  return (\n\n    <div className='App'>\n    <Router>\n      <MenuSideBar className='menu'/>\n\n      <div className='content'>\n      <Switch >\n      \n      <Route exact path='/' component={HomePage} />\n\n      <Route path='/perfil' render={ () => this.props.user.name == '' ? \n        (<Redirect to='/'/>) :\n        (<PerfilPage />)\n      } />\n\n      <Route path='/scheduler' render={ () => this.props.user.name == '' ? \n              (<Redirect to='/'/>) :\n              (<SchedulerPage />)\n            } />\n\n      <Route path='/dashboard' render={ () => this.props.user.name == '' ? \n              (<Redirect to='/'/>) :\n              (<DiagramsPage />)\n            } />\n\n      <Route path='/signin-signup' render={ () => this.props.user.name != '' ? \n              (<Redirect to='/'/>) :\n              (<SignInSignUpPage />)\n      } />\n      \n      </Switch>\n      </div>\n\n    </Router>\n    </div>\n  );\n  }\n}\n\n\nconst mapStateToProps = createStructuredSelector({\n  user : selectUser\n  })\n\nexport default connect(mapStateToProps)(App);\n","  \r\nimport {DateActionTypes} from './date.types'\r\n\r\n\r\nconst INITIAL_STATE ={\r\n    selectDate: null\r\n}\r\n\r\nconst selectedDateReducer = (state =  INITIAL_STATE, action) => {\r\n\r\n    switch (action.type){\r\n        case DateActionTypes.SET_SELECTED_DATE:\r\n            return {\r\n                ...state,\r\n                selectDate: action.payload\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport default selectedDateReducer","export const addTaskToList = (listOfTasks, taskToAdd) => {\r\n    return [...listOfTasks, {...taskToAdd}]\r\n}\r\n\r\nexport const removeTaskToList = (listOfTasks, taskToRemove) => {  \r\n    return listOfTasks.filter(t => t.id != taskToRemove.id)\r\n};\r\n\r\nexport const setStatusDowngrade = (listOfTasks, task) => {\r\n    return listOfTasks.map(t => \r\n\r\n        (t.id == task.id && t.status == 'DOING') ?\r\n        {\r\n            ...t, \r\n            status : 'TODO'\r\n        }\r\n\r\n        : (t.id == task.id && t.status == 'DONE') ?\r\n        {\r\n            ...t, \r\n            status : 'DOING'\r\n        } \r\n\r\n        : t\r\n    )\r\n};\r\n\r\nexport const setStatusUpgrade = (listOfTasks, task) => {\r\n    \r\n    return listOfTasks.map(t => \r\n\r\n        (t.id == task.id && t.status == 'DOING') ?\r\n        {\r\n            ...t, \r\n            status : 'DONE'\r\n        }\r\n\r\n        : (t.id == task.id && t.status == 'TODO') ?\r\n        {\r\n            ...t, \r\n            status : 'DOING'\r\n        } \r\n\r\n        : t\r\n\r\n    )\r\n}","import {TaskActionTypes} from './tasks.types'\r\nimport {addTaskToList, removeTaskToList, setStatusDowngrade, setStatusUpgrade} from './task.utils'\r\n\r\nconst INITIAL_STATE ={\r\n    taskList: []\r\n}\r\n\r\nconst taskReducer = (state =  INITIAL_STATE, action) => {\r\n\r\n    switch (action.type){\r\n        case TaskActionTypes.SET_TASKS:\r\n            return {\r\n                ...state,\r\n                taskList: action.payload\r\n            }\r\n        case TaskActionTypes.ADD_TASK:\r\n            return {\r\n                ...state,\r\n                taskList: addTaskToList(state.taskList, action.payload)\r\n            }\r\n        case TaskActionTypes.REMOVE_TASK:\r\n            return {\r\n                ...state,\r\n                taskList: removeTaskToList(state.taskList, action.payload)\r\n            }\r\n        case TaskActionTypes.SET_STATUS_DOWNGRADE:\r\n            return {\r\n                ...state,\r\n                taskList: setStatusDowngrade(state.taskList, action.payload)\r\n            }\r\n        case TaskActionTypes.SET_STATUS_UPGRADE:\r\n            return {\r\n                ...state,\r\n                taskList: setStatusUpgrade(state.taskList, action.payload)\r\n            }\r\n\r\n\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport default taskReducer","import {UserActionTypes} from './user.type'\r\n\r\nconst INITIAL_STATE ={\r\n    user: {\r\n        id: '',\r\n        name: '',\r\n        email: ''\r\n    }\r\n}\r\n\r\nconst userReducer = (state =  INITIAL_STATE, action) => {\r\n    \r\n    switch (action.type){\r\n        case UserActionTypes.ADD_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import {combineReducers } from 'redux'\r\n\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport selectedDateReducer from './date/date.reducer';\r\nimport taskReducer from './tasks/tasks.reducer';\r\nimport userReducer from './user/user.reducer';\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage\r\n  };\r\n  \r\n  const rootReducer = combineReducers({\r\n      date : selectedDateReducer,\r\n      task : taskReducer,\r\n      user : userReducer\r\n\r\n})\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware} from 'redux'\r\nimport logger from 'redux-logger'\r\n\r\n\r\nimport rootReducer from './root-reducer'\r\n\r\n// o  middlewarer logger será útil para debuggar, \r\n// já que irá printar o que está acontecendo\r\nconst middlewarers = [logger] \r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewarers))\r\n\r\n\r\n\r\nexport default {store};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//redux\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store';\n/*\nTO DEPLOY:\n\ngit add .\n\ngit commit -m \"\"\n\ngit push\n\nnpm run deploy\n\n*/\n\nReactDOM.render(\n  <Provider store = {store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
{"version":3,"sources":["pages/home/home.jsx","redux/date/date.selector.js","redux/date/date.types.js","components/calendar/calendar.jsx","redux/date/date.actions.js","redux/tasks/tasks.types.js","components/taskPainel/taskPainel.jsx","redux/tasks/tasks.actions.js","redux/tasks/tasks.selector.js","components/painel/painel.jsx","components/taskPreview/taskPreview.jsx","pages/scheduler/scheduler.jsx","pages/perfil/perfil.jsx","pages/dashboard/dashboard.jsx","components/signin/signin.jsx","components/signup/signup.jsx","pages/signin-signup/signin-signup.jsx","components/menu-side-bar/menu-side-bar.jsx","App.js","redux/date/date.reducer.js","redux/tasks/task.utils.js","redux/tasks/tasks.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["HomePage","selectSelectedDate","createSelector","state","date","selectDate","DateActionTypes","mapStateToProps","createStructuredSelector","connect","dispatch","setSelectedDate","type","payload","useState","Date","value","setValue","toLocaleDateString","className","onChange","showFixedNumberOfWeeks","TaskActionTypes","removeTask","task","setStatusDowngrade","setStatusUpgrade","handleClick","taskInfo","method","endpoint","level","status","console","log","fetch","headers","body","JSON","stringify","id","title","description","catch","err","onClick","selectTaskList","taskList","Painel","props","newProps","this","setState","then","res","json","out","setTasks","map","Component","addTask","setDate","setTitle","setDescription","response","name","required","placeholder","event","target","cols","rows","dateSplit","split","dateOriginal","obj","SchedulerPage","PerfilPage","DiagramsPage","SignIn","handleSubmit","a","preventDefault","email","password","handleChange","onSubmit","React","SignUp","displayName","confirmPassword","alert","SignInSignUpPage","MenuSideBar","menuCollapse","setMenuCollapse","user","collapsed","iconShape","active","icon","to","App","exact","path","component","INITIAL_STATE","selectedDateReducer","action","addTaskToList","listOfTasks","taskToAdd","removeTaskToList","taskToRemove","filter","t","taskReducer","persistConfig","key","storage","rootReducer","combineReducers","persistReducer","middlewarers","logger","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"weASeA,EANE,kBACb,8BACI,6C,sDCDKC,EAAqBC,YAC9B,CAHe,SAAAC,GAAK,OAAIA,EAAMC,QAI9B,SAACA,GAAD,OAAUA,EAAKC,cCNNC,EACU,oBC2BvB,IAAMC,EAAkBC,YAAyB,CAC9CJ,KAAOH,IAQKQ,cAAQF,GALI,SAAAG,GAAQ,MAAK,CACtCC,gBAAiB,SAAAP,GAAI,OAAIM,EC/BI,SAAAN,GAAI,MAAK,CACpCQ,KAAMN,EACNO,QAAST,GD6BwBO,CAAgBP,QAItCK,EA1Bf,YAAmD,EAAvBL,KAAwB,IAAlBO,EAAiB,EAAjBA,gBAElC,EAA0BG,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KAIA,OAFAN,EAAgBK,EAAME,sBAGhB,qBAAKC,UAAU,WAAf,SACA,cAAC,IAAD,CACEC,SAAUH,EACVD,MAAOA,EACPK,wBAAwB,S,wBEtBnBC,EACE,YADFA,EAEC,WAFDA,EAGG,cAHHA,EAIY,uBAJZA,EAKU,qBCuFvB,IAMeb,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACtCa,WAAY,SAAAC,GAAI,OAAId,ECjFI,SAACc,GAAD,MAAW,CACjCZ,KAAMU,EACNT,QAASW,GD+EkBD,CAAWC,KACxCC,mBAAoB,SAAAD,GAAI,OAAId,EC7EI,SAACc,GAAD,MAAW,CACzCZ,KAAMU,EACNT,QAASW,GD2E0BC,CAAmBD,KACxDE,iBAAkB,SAAAF,GAAI,OAAId,ECzEI,SAACc,GAAD,MAAW,CACvCZ,KAAMU,EACNT,QAASW,GDuEwBE,CAAiBF,QAGvCf,EAvFf,YAA8E,IAAzDe,EAAwD,EAAxDA,KAAMD,EAAkD,EAAlDA,WAAYE,EAAsC,EAAtCA,mBAAoBC,EAAkB,EAAlBA,iBAGjDC,EAAc,SAACC,EAAUC,EAAQC,GAA0B,IAAhBC,EAAe,uDAAT,KAExC,MAATA,GACFL,EAAiBE,GACU,SAAnBA,EAASI,OAAqBJ,EAASI,OAAS,OAC5B,QAAnBJ,EAASI,SAAoBJ,EAASI,OAAS,UAEzC,QAATD,IACNN,EAAmBG,GACQ,SAAnBA,EAASI,OAAoBJ,EAASI,OAAS,OAC3B,QAAnBJ,EAASI,SAAmBJ,EAASI,OAAS,UAGzDC,QAAQC,IAAI,uCACZD,QAAQC,IAAI,uCACZD,QAAQC,IAAI,aAAeJ,EAAW,cAAgBD,GACtDI,QAAQC,IAAI,SAAWN,EAASI,QAChCC,QAAQC,IAAI,uCACZD,QAAQC,IAAI,uCAEZC,MAAM,8BAAD,OAA+BL,GACjC,CACCD,OAAQA,EACRO,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBC,GAAKZ,EAASY,GACdC,MAAQb,EAASa,MACjBC,YAAcd,EAASc,YACvBV,OAASJ,EAASI,OAClB5B,KAAOwB,EAASxB,SAGlBuC,OAAM,SAAAC,GAAS,MAAOA,MAM5B,OACA,sBAAKzB,UAAU,cAAf,UAEe,SAAfK,EAAKQ,OAEL,sBAAKb,UAAY,YAAjB,UAEA,cAAC,IAAD,CAAaA,UAAU,cACvB0B,QAAS,WAAOlB,EAAYH,EAAM,MAAO,aAAc,WAEvD,cAAC,IAAD,CAASL,UAAU,YACnB0B,QAAS,WAAOlB,EAAYH,EAAM,MAAO,aAAc,YAGtC,QAAfA,EAAKQ,OACP,qBAAKb,UAAY,kBAAjB,SACA,cAAC,IAAD,CAASA,UAAU,YACnB0B,QAAS,WAAOlB,EAAYH,EAAM,MAAO,aAAc,WAGvD,qBAAKL,UAAY,YAAjB,SAEA,cAAC,IAAD,CAAaA,UAAU,cACvB0B,QAAS,WAAOlB,EAAYH,EAAM,MAAO,aAAc,aAItD,+BAAKA,EAAKiB,MAAV,OACA,4BAAIjB,EAAKkB,cACT,qBAAKvB,UAAY,YAAjB,SAEA,cAAC,IAAD,CAAkBA,UAAU,cAC5B0B,QAAS,WAAOlB,EAAYH,EAAM,SAAU,cAAeD,EAAWC,cEhF9DsB,G,MAAiB5C,YAC1B,CAHe,SAAAC,GAAK,OAAIA,EAAMqB,QAI9B,SAACA,GAAD,OAAUA,EAAKuB,aCMbC,E,kDACN,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACD9C,MAAQ,CACTqB,KAAO,IAHG,E,oEAQlB,SAAiC0B,GAC7BC,KAAKC,SAAU,CAAE5B,KAAO0B,EAAS1B,S,+BAIrC,WAAoB,IAAD,OACfS,QAAQC,IAAI,mCAEZC,MAAM,uCAAwC,CAAEN,OAAQ,QACvDwB,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GACH,EAAKJ,SAAS,CAAC5B,KAAOgC,OAEzBb,OAAM,SAAAC,GAAS,MAAOA,O,oBAM3B,WAEIX,QAAQC,IAAI,wBACZ,IAAM9B,EAAQ+C,KAAKF,MAAM7C,KACnBoB,EAAQ2B,KAAKhD,MAAMqB,KAIzB,OAFA2B,KAAKF,MAAMQ,SAASjC,GAIpB,sBAAKL,UAAU,SAAf,UACA,yCAAYf,KACZ,sBAAKe,UAAU,cAAf,UAEI,sBAAKA,UAAU,gBAAf,UACI,mBAAGA,UAAU,OAAb,kBACA,qBAAKA,UAAU,sBAAf,SACKK,EAAKkC,KAAI,SAAAlC,GAAI,MAAoB,QAAfA,EAAKQ,QAAoBR,EAAKpB,MAAQA,EAAO,cAAC,EAAD,CAA0BoB,KAAQA,GAAjBA,EAAKgB,IAAsB,WAIpH,sBAAKrB,UAAU,gBAAf,UACI,mBAAGA,UAAU,OAAb,mBACA,qBAAKA,UAAU,sBAAf,SACKK,EAAKkC,KAAI,SAAAlC,GAAI,MAAoB,SAAfA,EAAKQ,QAAqBR,EAAKpB,MAAQA,EAAO,cAAC,EAAD,CAA0BoB,KAAQA,GAAjBA,EAAKgB,IAAsB,WAIrH,sBAAKrB,UAAU,gBAAf,UACI,mBAAGA,UAAU,OAAb,kBACA,qBAAKA,UAAU,sBAAf,SACKK,EAAKkC,KAAI,SAAAlC,GAAI,MAAoB,QAAfA,EAAKQ,QAAoBR,EAAKpB,MAAQA,EAAO,cAAC,EAAD,CAA0BoB,KAAQA,GAAjBA,EAAKgB,IAAsB,qB,GA3DvGmB,aAqEfpD,EAAkBC,YAAyB,CAC7CJ,KAAOH,EACPuB,KAAOsB,IAOKrC,cAAQF,GAJG,SAAAG,GAAQ,MAAK,CACpC+C,SAAU,SAAAjC,GAAI,OAAId,EFrFE,SAACc,GAAD,MAAW,CAC/BZ,KAAMU,EACNT,QAASW,GEmFkBiC,CAASjC,QAGxBf,CAA6CuC,G,MCP3D,IAIavC,cAAQ,MAJM,SAAAC,GAAQ,MAAK,CACtCkD,QAAS,SAAApC,GAAI,OAAId,EH7EE,SAACc,GAAD,MAAW,CAC9BZ,KAAMU,EACNT,QAASW,GG2EiBoC,CAAQpC,QAGvBf,EAhFf,YAAiC,IAAVmD,EAAS,EAATA,QAErB,EAAwB9C,mBAAS,IAAjC,mBAAOV,EAAP,KAAayD,EAAb,KACA,EAA0B/C,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcqB,EAAd,KACA,EAAsChD,mBAAS,IAA/C,mBAAO4B,EAAP,KAAoBqB,EAApB,KAEA,EAAgCjD,mBAAS,IAAzC,mBAAOkD,EAAP,KA8BA,OA9BA,KA+BA,sBAAK7C,UAAU,eAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,wCAEF,uBAAMA,UAAU,YAAhB,UACE,uBACEP,KAAK,OACLqD,KAAK,QACLzB,GAAG,aACH0B,UAAQ,EACRC,YAAY,QACZ/C,SAAU,SAAAgD,GAAK,OAAIN,EAASM,EAAMC,OAAOrD,UAE3C,0BACEiD,KAAK,cACLzB,GAAG,cACH2B,YAAY,cACZD,UAAQ,EACRI,KAAK,KACLC,KAAK,KACLnD,SAAU,SAAAgD,GAAK,OAAIL,EAAeK,EAAMC,OAAOrD,UACjD,qBAAKG,UAAU,YAAf,SACA,uBACI+C,UAAQ,EACRtD,KAAK,OACLqD,KAAK,OACLzB,GAAG,OACHpB,SAAU,SAAAgD,GAAK,OAAIP,EAAQO,EAAMC,OAAOrD,YAI5C,wBAAQJ,KAAK,SAASO,UAAU,WAC5B0B,QAAS,YA7DG,WAElB,IAAM2B,EAAYpE,EAAKqE,MAAM,KACvBC,EAAeF,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAMA,EAAU,GAEnEhD,EAAO,CACXiB,MAAQA,EACRC,YAAcA,EACdtC,KAAQsE,EACR1C,OAAS,QAGXG,MAAM,wCACH,CACCN,OAAQ,OACRO,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBE,MAAQjB,EAAKiB,MACbC,YAAclB,EAAKkB,YACnBV,OAASR,EAAKQ,OACd5B,KAAOoB,EAAKpB,SAGdiD,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAsB,GAAG,OAAIf,EAAQe,MACrBhC,OAAM,SAAAC,GAAS,MAAOA,KAoCJjB,GAAeiC,EAAQI,IAD3C,oCCrDYY,EAdI,WAGlB,OACA,sBAAKzD,UAAU,YAAf,UACA,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,OAEJ,cAAC,EAAD,CAAQA,UAAU,eCRP0D,G,MANI,kBACf,8BACI,gDCIOC,G,MANM,kBACjB,8BACI,mD,yCC4DOC,G,wDA7DX,WAAY9B,GAAO,IAAD,8BACd,cAAMA,IAQV+B,aATkB,uCASH,WAAMZ,GAAN,eAAAa,EAAA,sDAEXb,EAAMc,iBAFK,EAKe,EAAK/E,MALpB,EAKJgF,MALI,EAKGC,SALH,2CATG,wDAkBlBC,aAAe,SAAAjB,GAEX,MAAsBA,EAAMC,OAArBrD,EAAP,EAAOA,MAAOiD,EAAd,EAAcA,KAEd,EAAKb,SAAL,eAAgBa,EAAOjD,KAnBvB,EAAKb,MAAQ,CACTgF,MAAM,GACNC,SAAS,IALC,E,0CA0BlB,WACI,OACA,sBAAKjE,UAAU,UAAf,UACQ,oBAAIA,UAAU,QAAd,sCACA,wEAEA,uBAAMA,UAAU,OAAOmE,SAAUnC,KAAK6B,aAAtC,UACI,sBAAK7D,UAAU,SAAf,UACI,uBAAOA,UAAU,QAAjB,qBACA,uBACAA,UAAU,QACV8C,KAAK,QACLrD,KAAK,QACLQ,SAAU+B,KAAKkC,aACfnB,UAAQ,OAEZ,sBAAK/C,UAAU,SAAf,UACI,uBAAOA,UAAU,QAAjB,wBACA,uBACAA,UAAU,QACV8C,KAAK,WACLrD,KAAK,WACLQ,SAAU+B,KAAKkC,aACfnB,UAAQ,OAGZ,qBAAK/C,UAAU,UAAf,SACI,wBAAQA,UAAU,gBAAgBP,KAAK,SAAvC,kC,GAtDH2E,IAAM5B,YCuFZ6B,G,wDAtFX,WAAYvC,GAAO,IAAD,8BACd,cAAMA,IAUV+B,aAXkB,uCAWH,WAAMZ,GAAN,mBAAAa,EAAA,yDAEXb,EAAMc,iBAFK,EAK+C,EAAK/E,MALpD,EAKHsF,YALG,EAKUN,MAAOC,EALjB,EAKiBA,SAAUM,EAL3B,EAK2BA,gBAElCN,IAAaM,EAPN,uBAQTC,MAAM,yBARG,8DAXG,wDAyBlBN,aAAe,SAAAjB,GAEX,MAAwBA,EAAMC,OAAtBJ,EAAR,EAAQA,KAAMjD,EAAd,EAAcA,MAEd,EAAKoC,SAAL,eAAgBa,EAAOjD,KA1BvB,EAAKb,MAAQ,CACT,YAAe,GACf,MAAS,GACT,SAAY,GACZ,gBAAmB,IAPT,E,0CAiClB,WACI,OACI,sBAAKgB,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,qCACA,wEAEA,uBAAMA,UAAU,OAAOmE,SAAUnC,KAAK6B,aAAtC,UACA,sBAAK7D,UAAU,SAAf,UACQ,uBAAOA,UAAU,QAAjB,oBACA,uBACAA,UAAU,QACV8C,KAAK,cACLrD,KAAK,OACLQ,SAAU+B,KAAKkC,aACfnB,UAAQ,OAEZ,sBAAK/C,UAAU,SAAf,UACI,uBAAOA,UAAU,QAAjB,qBACA,uBACAA,UAAU,QACV8C,KAAK,QACLrD,KAAK,QACLQ,SAAU+B,KAAKkC,aACfnB,UAAQ,OAEZ,sBAAK/C,UAAU,SAAf,UACI,uBAAOA,UAAU,QAAjB,wBACA,uBACAA,UAAU,QACV8C,KAAK,WACLrD,KAAK,WACLQ,SAAU+B,KAAKkC,aACfnB,UAAQ,OAEZ,sBAAK/C,UAAU,SAAf,UACI,uBAAOA,UAAU,QAAjB,gCACA,uBACAA,UAAU,QACV8C,KAAK,kBACLrD,KAAK,WACLQ,SAAU+B,KAAKkC,aACfnB,UAAQ,OAEZ,qBAAK/C,UAAU,UAAf,SACI,wBAAQA,UAAU,gBAAgBP,KAAK,SAAvC,kC,GA9EH2E,IAAM5B,YCUZiC,EAPU,kBACrB,sBAAKzE,UAAU,sBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,oDCiEO0E,MArDf,WAEE,MAAwC/E,oBAAS,GAAjD,mBAAOgF,EAAP,KAAqBC,EAArB,KACMC,EAAOlF,mBAAS,MAMtB,OAEM,qBAAKK,UAAU,OAAf,SACA,eAAC,IAAD,CACA8E,UAAaH,EADb,UAEE,eAAC,IAAD,WACA,qBAAK3E,UAAU,WAAf,SAEI,6BAAK2E,EAAe,oCAAa,8BAAI,cAAC,IAAD,CAAoB3E,UAAU,aAAlC,oBAEnC,qBAAKA,UAAU,YAAY0B,QAdf,WACLkD,GAAfD,IAaQ,SAEGA,EACC,cAAC,IAAD,CAAoB3E,UAAU,eAE9B,cAAC,IAAD,CAAoBA,UAAU,oBAIpC,cAAC,IAAD,UACE,eAAC,IAAD,CAAM+E,UAAU,SAAhB,UACE,eAAC,IAAD,CAAUC,QAAQ,EAAMC,KAAM,cAAC,IAAD,IAAYjF,UAAU,YAApD,iBAAoE,cAAC,IAAD,CAAMkF,GAAG,SAC7E,eAAC,IAAD,CAAUD,KAAM,cAAC,IAAD,IAAYjF,UAAU,YAAtC,uBAA4D,cAAC,IAAD,CAAMkF,GAAG,kBACrE,eAAC,IAAD,CAAUD,KAAM,cAAC,IAAD,IAAgBjF,UAAU,YAA1C,mBAA4D,cAAC,IAAD,CAAMkF,GAAG,eACrE,eAAC,IAAD,CAAUD,KAAM,cAAC,IAAD,IAAkBjF,UAAU,YAA5C,6BAAwE,cAAC,IAAD,CAAMkF,GAAG,uBAKrF,cAAC,IAAD,UACE,cAAC,IAAD,CAAMH,UAAU,SAAhB,SACc,MAAXF,EAAK,GACH,eAAC,IAAD,CAAUI,KAAM,cAAC,IAAD,IAAuBjF,UAAU,YAAjD,gCAAgF,cAAC,IAAD,CAAMkF,GAAG,sBACzF,cAAC,IAAD,CAAUD,KAAM,cAAC,IAAD,IAAajF,UAAU,YAAvC,8BCnBDmF,E,4JA7Bd,WAEA,OAEE,qBAAKnF,UAAU,MAAf,SACA,eAAC,IAAD,WACE,cAAC,EAAD,CAAaA,UAAU,SAEvB,qBAAKA,UAAU,UAAf,SACA,eAAC,IAAD,WAEA,cAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,IAAIC,UAAWzG,IACjC,cAAC,IAAD,CAAOwG,KAAK,UAAUC,UAAW5B,IACjC,cAAC,IAAD,CAAO2B,KAAK,aAAaC,UAAW7B,IACpC,cAAC,IAAD,CAAO4B,KAAK,aAAaC,UAAW3B,IACpC,cAAC,IAAD,CAAO0B,KAAK,iBAAiBC,UAAWb,kB,GAjB5BjC,a,oCCTZ+C,GAAe,CACjBrG,WAAY,MAgBDsG,GAba,WAAqC,IAApCxG,EAAmC,uDAA1BuG,GAAeE,EAAW,uCAE5D,OAAQA,EAAOhG,MACX,KAAKN,EACD,OAAO,6BACAH,GADP,IAEIE,WAAYuG,EAAO/F,UAEvB,QACI,OAAOV,I,sCCjBV0G,GAAgB,SAACC,EAAaC,GACvC,MAAM,GAAN,oBAAWD,GAAX,iBAA4BC,MAGnBC,GAAmB,SAACF,EAAaG,GAC1C,OAAOH,EAAYI,QAAO,SAAAC,GAAC,OAAIA,EAAE3E,IAAMyE,EAAazE,OAG3Cf,GAAqB,SAACqF,EAAatF,GAC5C,OAAOsF,EAAYpD,KAAI,SAAAyD,GAAC,OAEnBA,EAAE3E,IAAMhB,EAAKgB,IAAkB,SAAZ2E,EAAEnF,OAAtB,aAAC,gBAEMmF,GAFP,IAGInF,OAAS,SAGVmF,EAAE3E,IAAMhB,EAAKgB,IAAkB,QAAZ2E,EAAEnF,OAAtB,aAAC,gBAEImF,GAFL,IAGEnF,OAAS,UAGXmF,MAIGzF,GAAmB,SAACoF,EAAatF,GAE1C,OAAOsF,EAAYpD,KAAI,SAAAyD,GAAC,OAEnBA,EAAE3E,IAAMhB,EAAKgB,IAAkB,SAAZ2E,EAAEnF,OAAtB,aAAC,gBAEMmF,GAFP,IAGInF,OAAS,SAGVmF,EAAE3E,IAAMhB,EAAKgB,IAAkB,QAAZ2E,EAAEnF,OAAtB,aAAC,gBAEImF,GAFL,IAGEnF,OAAS,UAGXmF,MCxCJT,GAAe,CACjB3D,SAAU,IAsCCqE,GAnCK,WAAqC,IAApCjH,EAAmC,uDAA1BuG,GAAeE,EAAW,uCAEpD,OAAQA,EAAOhG,MACX,KAAKU,EACD,OAAO,6BACAnB,GADP,IAEI4C,SAAU6D,EAAO/F,UAEzB,KAAKS,EACD,OAAO,6BACAnB,GADP,IAEI4C,SAAU8D,GAAc1G,EAAM4C,SAAU6D,EAAO/F,WAEvD,KAAKS,EACD,OAAO,6BACAnB,GADP,IAEI4C,SAAUiE,GAAiB7G,EAAM4C,SAAU6D,EAAO/F,WAE1D,KAAKS,EACD,OAAO,6BACAnB,GADP,IAEI4C,SAAUtB,GAAmBtB,EAAM4C,SAAU6D,EAAO/F,WAE5D,KAAKS,EACD,OAAO,6BACAnB,GADP,IAEI4C,SAAUrB,GAAiBvB,EAAM4C,SAAU6D,EAAO/F,WAItD,QACI,OAAOV,IC/BjBkH,GAAgB,CAClBC,IAAK,OACLC,cAGIC,GAAcC,YAAgB,CAChCrH,KAAOuG,GACPnF,KAAO4F,KAKEM,gBAAeL,GAAeG,ICXvCG,GAAe,CAACC,MAETC,GAAQC,YAAYN,GAAaO,IAAe,WAAf,EAAmBJ,KCAjEK,IAASC,OACP,cAAC,IAAD,CAAUJ,MAASA,GAAnB,SACE,cAAC,IAAMK,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.3f872e4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './home.scss'\r\n\r\nconst HomePage = () => (\r\n    <div>\r\n        <h1>HOME !!!</h1>\r\n    </div>\r\n);\r\n\r\nexport default HomePage","import {createSelector} from 'reselect'\r\n\r\nconst selectDate = state => state.date\r\n\r\nexport const selectSelectedDate = createSelector(\r\n    [selectDate],\r\n    (date) => date.selectDate\r\n)","export const DateActionTypes = {\r\n    SET_SELECTED_DATE: 'SET_SELECTED_DATE'\r\n}","import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport './calendar.scss'\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {selectSelectedDate} from '../../redux/date/date.selector'\r\nimport {createStructuredSelector} from 'reselect'\r\nimport { setSelectedDate } from '../../redux/date/date.actions';\r\n\r\n\r\nfunction CalendarComponent({date, setSelectedDate}){\r\n  \r\nconst [value, setValue] = useState(new Date())\r\n\r\nsetSelectedDate(value.toLocaleDateString())\r\n  \r\nreturn(\r\n      <div className='calendar'>\r\n      <Calendar\r\n        onChange={setValue}\r\n        value={value}\r\n        showFixedNumberOfWeeks={true}\r\n      />\r\n      </div>\r\n)\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n   date : selectSelectedDate\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setSelectedDate: date => dispatch( setSelectedDate(date) )\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarComponent)\r\n","import {DateActionTypes} from './date.types'\r\n\r\nexport const setSelectedDate = date => ({\r\n    type: DateActionTypes.SET_SELECTED_DATE,\r\n    payload: date\r\n})","export const TaskActionTypes = {\r\n    SET_TASKS: 'SET_TASKS',\r\n    ADD_TASK: 'ADD_TASK',\r\n    REMOVE_TASK:'REMOVE_TASK',\r\n    SET_STATUS_DOWNGRADE:'SET_STATUS_DOWNGRADE',\r\n    SET_STATUS_UPGRADE:'SET_STATUS_UPGRADE',\r\n}","import React from 'react';\r\nimport './taskPainel.scss'\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\r\nimport { HiCheck } from \"react-icons/hi\";\r\nimport { RiReplyLine } from \"react-icons/ri\";\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { removeTask, setStatusDowngrade, setStatusUpgrade } from '../../redux/tasks/tasks.actions';\r\n\r\nfunction TaskPainel({task, removeTask, setStatusDowngrade, setStatusUpgrade}){\r\n\r\n\r\n    const handleClick = (taskInfo, method, endpoint, level=null) => {\r\n\r\n      if (level == 'up') {\r\n        setStatusUpgrade(taskInfo)\r\n        if     (taskInfo.status == 'DOING') { taskInfo.status = 'DONE' }\r\n        else if (taskInfo.status == 'TODO') { taskInfo.status = 'DOING'}\r\n      }\r\n     else if (level == 'down'){\r\n        setStatusDowngrade(taskInfo)\r\n        if     (taskInfo.status == 'DOING'){ taskInfo.status = 'TODO' }\r\n        else if (taskInfo.status == 'DONE'){ taskInfo.status = 'DOING'}\r\n      }\r\n\r\n      console.log('-----------------------------------')\r\n      console.log('-----------------------------------')\r\n      console.log('endpoint: ' + endpoint + '  metrhod: ' + method)\r\n      console.log('body: ' + taskInfo.status)\r\n      console.log('-----------------------------------')\r\n      console.log('-----------------------------------')\r\n\r\n      fetch(`http://localhost:8080/task/${endpoint}`,\r\n         { \r\n          method: method ,\r\n          headers: {\"Content-type\": \"application/json\"},\r\n          body: JSON.stringify({\r\n            id : taskInfo.id,\r\n            title : taskInfo.title,\r\n            description : taskInfo.description,\r\n            status : taskInfo.status,\r\n            date : taskInfo.date\r\n          })\r\n        })\r\n         .catch(err => { throw  err })\r\n\r\n      }\r\n      \r\n\r\n\r\n    return (\r\n    <div className='task-painel'>\r\n    {\r\n    task.status == \"DOING\"\r\n     ? \r\n    <div className = 'icons-sup'>\r\n\r\n    <RiReplyLine className='undone icon' \r\n    onClick={() => {handleClick(task, 'PUT', 'updatetask', 'down')}}/> \r\n\r\n    <HiCheck className='done icon'\r\n    onClick={() => {handleClick(task, 'PUT', 'updatetask', 'up')}} />\r\n    \r\n    </div>\r\n    : task.status == \"TODO\" ?\r\n    <div className = 'icons-sup-right'>\r\n    <HiCheck className='done icon'\r\n    onClick={() => {handleClick(task, 'PUT', 'updatetask', 'up')}} />\r\n    </div>\r\n    :\r\n    <div className = 'icons-sup'>\r\n\r\n    <RiReplyLine className='undone icon' \r\n    onClick={() => {handleClick(task, 'PUT', 'updatetask', 'down')}}/> \r\n    </div>\r\n    }\r\n\r\n     <h2>{task.title} </h2>\r\n     <p>{task.description}</p>\r\n     <div className = 'icons-inf'>\r\n\r\n     <RiDeleteBin5Line className='delete icon' \r\n     onClick={() => {handleClick(task, 'DELETE', 'deletetask'); removeTask(task)}} />\r\n\r\n     {/* <BiEditAlt  className='update icon'/> */}\r\n\r\n     </div>\r\n    </div>\r\n    )}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  removeTask: task => dispatch(removeTask(task)) ,\r\n  setStatusDowngrade: task => dispatch(setStatusDowngrade(task)) ,\r\n  setStatusUpgrade: task => dispatch(setStatusUpgrade(task)) \r\n  })\r\n  \r\nexport default connect(null, mapDispatchToProps)(TaskPainel)","import {TaskActionTypes} from './tasks.types'\r\n\r\nexport const setTasks = (task) => ({\r\n    type: TaskActionTypes.SET_TASKS,\r\n    payload: task\r\n})\r\n\r\nexport const addTask = (task) => ({\r\n    type: TaskActionTypes.ADD_TASK,\r\n    payload: task\r\n})\r\n\r\nexport const removeTask = (task) => ({\r\n    type: TaskActionTypes.REMOVE_TASK,\r\n    payload: task\r\n})\r\n\r\nexport const setStatusDowngrade = (task) => ({\r\n    type: TaskActionTypes.SET_STATUS_DOWNGRADE,\r\n    payload: task\r\n})\r\n\r\nexport const setStatusUpgrade = (task) => ({\r\n    type: TaskActionTypes.SET_STATUS_UPGRADE,\r\n    payload: task\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import {createSelector} from 'reselect'\r\n\r\nconst selectTask = state => state.task\r\n\r\nexport const selectTaskList = createSelector(\r\n    [selectTask],\r\n    (task) => task.taskList\r\n)","import React, { Component } from 'react';\r\nimport TaskPainel from '../taskPainel/taskPainel';\r\nimport './painel.scss'\r\n\r\n//redux\r\nimport {connect} from 'react-redux';\r\nimport {selectSelectedDate} from '../../redux/date/date.selector'\r\nimport {selectTaskList} from '../../redux/tasks/tasks.selector'\r\nimport {setTasks} from '../../redux/tasks/tasks.actions'\r\n\r\nimport {createStructuredSelector} from 'reselect'\r\n\r\nclass Painel extends Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n        task : [],\r\n    \r\n    }\r\n}\r\n\r\nUNSAFE_componentWillReceiveProps(newProps){\r\n    this.setState( { task : newProps.task} )\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n    console.log(\"ENTROU componentDidMount PAINEL\")\r\n\r\n    fetch('http://localhost:8080/task/readtasks', { method: 'GET' })\r\n    .then (res => res.json() )\r\n    .then (out => {\r\n        this.setState({task : out})\r\n    })\r\n    .catch(err => { throw  err })\r\n   \r\n}\r\n\r\n\r\n\r\nrender(){\r\n\r\n    console.log(\"ENTROU RENDER PAINEL\")\r\n    const date  = this.props.date;\r\n    const task  = this.state.task;\r\n\r\n    this.props.setTasks(task)\r\n\r\n    return (\r\n\r\n    <div className='painel'>\r\n    <h1> Date  {date}</h1>\r\n    <div className='painel-main'>\r\n\r\n        <div className='painel-colunm'>\r\n            <p className='type'>TODO</p>\r\n            <div className='painel-colunm-tasks'>\r\n                {task.map(task => (task.status == \"TODO\" && task.date == date ? <TaskPainel key={task.id} task = {task}/> : ''))}\r\n            </div>\r\n        </div>\r\n\r\n        <div className='painel-colunm'>\r\n            <p className='type'>DOING</p>\r\n            <div className='painel-colunm-tasks'>\r\n                {task.map(task => (task.status == \"DOING\" && task.date == date ? <TaskPainel key={task.id} task = {task}/> : ''))}\r\n            </div>\r\n        </div>\r\n\r\n        <div className='painel-colunm'>\r\n            <p className='type'>DONE</p>\r\n            <div className='painel-colunm-tasks'>\r\n                {task.map(task => (task.status == \"DONE\" && task.date == date ? <TaskPainel key={task.id} task = {task}/> : ''))}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    date : selectSelectedDate, \r\n    task : selectTaskList\r\n    })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setTasks: task => dispatch(setTasks(task)) \r\n  })\r\n\r\n export default connect(mapStateToProps, mapDispatchToProps)(Painel)\r\n\r\n","import React, { useState } from \"react\";\r\nimport \"./taskPreview.scss\";\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { addTask } from '../../redux/tasks/tasks.actions';\r\n\r\nfunction TaskPreview ({addTask}){\r\n\r\n  const [date, setDate] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  const [response, setResponse] = useState('')\r\n\r\n  const handleClick = () => {\r\n\r\n    const dateSplit = date.split('-')\r\n    const dateOriginal = dateSplit[2] + '/' + dateSplit[1] + '/' + dateSplit[0]\r\n\r\n    const task = {\r\n      title : title,\r\n      description : description,\r\n      date :  dateOriginal,\r\n      status : 'TODO'\r\n    }\r\n\r\n    fetch(`http://localhost:8080/task/createtask`,\r\n       { \r\n        method: 'POST' ,\r\n        headers: {\"Content-type\": \"application/json\"},\r\n        body: JSON.stringify({\r\n          title : task.title,\r\n          description : task.description,\r\n          status : task.status,\r\n          date : task.date\r\n        })\r\n      })\r\n       .then( res => res.json())\r\n       .then( obj => addTask(obj))\r\n       .catch(err => { throw  err })\r\n    }\r\n\r\n  return(\r\n  <div className=\"task-preview\">\r\n    <div className=\"create-task-title\">\r\n      <h2>Task</h2>\r\n    </div>\r\n    <form className=\"task-form\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        id=\"form-title\"\r\n        required\r\n        placeholder=\"Title\"\r\n        onChange={event => setTitle(event.target.value)}      />\r\n\r\n      <textarea\r\n        name=\"description\"\r\n        id=\"description\"\r\n        placeholder=\"Description\"\r\n        required\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        onChange={event => setDescription(event.target.value)}      ></textarea>\r\n      <div className=\"form-date\">\r\n      <input  \r\n          required \r\n          type=\"date\" \r\n          name=\"date\" \r\n          id=\"date\" \r\n          onChange={event => setDate(event.target.value)}\r\n      />\r\n      </div>\r\n      \r\n      <button type=\"button\" className=\"btn-send\"\r\n          onClick={() => {handleClick(); addTask(response)}} \r\n          >Add to Painel</button>\r\n    </form>\r\n  </div>\r\n  )}\r\n\r\n\r\n  const mapDispatchToProps = dispatch => ({\r\n    addTask: task => dispatch(addTask(task)) ,\r\n    })\r\n    \r\nexport default connect(null, mapDispatchToProps)(TaskPreview)\r\n\r\n","import React, { Component } from 'react';\r\nimport './scheduler.scss'\r\n\r\nimport CalendarComponent from '../../components/calendar/calendar';\r\nimport Painel from '../../components/painel/painel';\r\nimport TaskPreview from '../../components/taskPreview/taskPreview'\r\n\r\n\r\nconst SchedulerPage = () => {\r\n\r\n\r\n    return (\r\n    <div className='scheduler'>\r\n    <div className='calendar-task'>\r\n        <CalendarComponent />\r\n        <TaskPreview />\r\n    </div>\r\n    <Painel className='painel'/>\r\n    </div>\r\n    )\r\n    }\r\n\r\n   export default SchedulerPage\r\n","import React from 'react';\r\nimport './perfil.scss'\r\n\r\nconst PerfilPage = () => (\r\n    <div>\r\n        <h1>PERFIL !!!</h1>\r\n    </div>\r\n);\r\n\r\nexport default PerfilPage","import React from 'react';\r\nimport './dashboard.scss'\r\n\r\nconst DiagramsPage = () => (\r\n    <div>\r\n        <h1>Dashboard !!!</h1>\r\n    </div>\r\n);\r\n\r\nexport default DiagramsPage","import React from 'react';\r\nimport './signin.scss'\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            email:'',\r\n            password:''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        // Quando o usuário apertar em \"SIGN IN\", virá para cá\r\n        event.preventDefault()\r\n\r\n        // o this state está com os valores digitas por conta do handleChange\r\n        const {email, password} = this.state\r\n\r\n        };\r\n\r\n    handleChange = event => {\r\n        // Toda vez que o input for alterado, o state receberá o valor\r\n        const {value, name} = event.target\r\n        \r\n        this.setState({[name]: value })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div className='sign-in'>\r\n                <h2 className='title'>I already have a account</h2>\r\n                <span> Sign in with you email and password</span>\r\n\r\n                <form className='form' onSubmit={this.handleSubmit}>\r\n                    <div className='celula'>\r\n                        <label className='label'>Email: </label>\r\n                        <input \r\n                        className='input'\r\n                        name='email' \r\n                        type='email' \r\n                        onChange={this.handleChange} \r\n                        required/>\r\n                    </div>\r\n                    <div className='celula'>\r\n                        <label className='label'>Password: </label>  \r\n                        <input\r\n                        className='input'\r\n                        name='password' \r\n                        type='password' \r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    </div>\r\n\r\n                    <div className='buttons'>\r\n                        <button className='custom-button' type='submit'>SIGN IN </button>\r\n                    </div> \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport './signup.scss'\r\n\r\nclass SignUp extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            'displayName': '',\r\n            'email': '',\r\n            'password': '',\r\n            'confirmPassword': ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        // Quando o usuário apertar em \"SIGN UP\", virá para cá\r\n        event.preventDefault();\r\n    \r\n        // o this state está com os valores digitas por conta do handleChange\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n    \r\n        if (password !== confirmPassword) {\r\n          alert(\"passwords don't match\");\r\n          return;\r\n        }\r\n        // Se as senhas forem iguais, aí fazemos a lógica aqui para cadastrar o usuário\r\n      };\r\n\r\n    handleChange = event => {\r\n       // Toda vez que o input for alterado, o state receberá o valor\r\n        const { name, value } = event.target\r\n\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'>I do not have a account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                \r\n                <form className='form' onSubmit={this.handleSubmit}>\r\n                <div className='celula'>\r\n                        <label className='label'>Name: </label>\r\n                        <input \r\n                        className='input'\r\n                        name='displayName' \r\n                        type='text' \r\n                        onChange={this.handleChange} \r\n                        required/>\r\n                    </div>\r\n                    <div className='celula'>\r\n                        <label className='label'>Email: </label>\r\n                        <input \r\n                        className='input'\r\n                        name='email' \r\n                        type='email' \r\n                        onChange={this.handleChange} \r\n                        required/>\r\n                    </div>\r\n                    <div className='celula'>\r\n                        <label className='label'>Password: </label>  \r\n                        <input\r\n                        className='input'\r\n                        name='password' \r\n                        type='password' \r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    </div>\r\n                    <div className='celula'>\r\n                        <label className='label'>Confirm Password: </label>\r\n                        <input \r\n                        className='input'\r\n                        name='confirmPassword' \r\n                        type='password' \r\n                        onChange={this.handleChange} \r\n                        required/>\r\n                    </div>\r\n                    <div className='buttons'>\r\n                        <button className='custom-button' type='submit'>SIGN UP </button>\r\n                    </div> \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport './signin-signup.scss'\r\n\r\nimport SignIn from '../../components/signin/signin';\r\nimport SignUp from '../../components/signup/signup';\r\n\r\nconst SignInSignUpPage = () => (\r\n    <div className='sign-in-and-sign-up'>\r\n        <SignIn />\r\n        <SignUp />\r\n    </div>\r\n);\r\n\r\nexport default SignInSignUpPage","import {\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SidebarHeader,\r\n  SidebarFooter,\r\n  SidebarContent,\r\n} from \"react-pro-sidebar\";\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\n\r\nimport { FaList, FaRegHeart } from \"react-icons/fa\";\r\nimport { FiHome, FiLogOut, FiArrowLeftCircle, FiArrowRightCircle } from \"react-icons/fi\";\r\nimport { RiPencilLine } from \"react-icons/ri\";\r\nimport { BiArrowToRight } from \"react-icons/bi\";\r\nimport { BsFillBarChartFill } from \"react-icons/bs\";\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport  './menu-side-bar.scss'\r\n\r\nfunction MenuSideBar() {\r\n\r\n  const [menuCollapse, setMenuCollapse] = useState(false);\r\n  const user = useState(null);\r\n\r\n  const menuIconClick = () => {\r\n    menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true);\r\n  };\r\n\r\n  return(\r\n\r\n        <div className='menu'>\r\n        <ProSidebar \r\n        collapsed = {menuCollapse} >\r\n          <SidebarHeader >\r\n          <div className=\"logotext\" >\r\n          \r\n              <h1>{menuCollapse ? <p>GPS</p> : <p ><BsFillBarChartFill className='big-icon'/>  Planner </p>}</h1>\r\n            </div>\r\n            <div className=\"closemenu\" onClick={menuIconClick}>\r\n\r\n              {menuCollapse ? (\r\n                <FiArrowRightCircle className='arrow-icon'/>\r\n              ) : (\r\n                <FiArrowLeftCircle  className='arrow-icon'/>\r\n              )}\r\n            </div>\r\n          </SidebarHeader>\r\n          <SidebarContent >\r\n            <Menu iconShape=\"square\">\r\n              <MenuItem active={true} icon={<FiHome />} className='menu-item'>Home<Link to=\"/\" /></MenuItem>\r\n              <MenuItem icon={<FaList />} className='menu-item'>Dashboards<Link to=\"/dashboard\" /></MenuItem>\r\n              <MenuItem icon={<FaRegHeart />} className='menu-item'>Perfil<Link to=\"/perfil\" /></MenuItem>\r\n              <MenuItem icon={<RiPencilLine />} className='menu-item'>Calendar Planner<Link to=\"/scheduler\" /></MenuItem>\r\n            </Menu>\r\n          </SidebarContent>\r\n\r\n          {/* AQUI SÓ VAI FUNCIONAR MESMO QUANDO O USUARIO ESTIVER FUNCIONANDO NO BACK E FRONT */}\r\n          <SidebarFooter >\r\n            <Menu iconShape=\"square\">\r\n              {user[0] == null\r\n              ?  <MenuItem icon={<BiArrowToRight   />}  className='menu-item'>Sign In or Sign Up <Link to=\"/signin-signup\" /></MenuItem>\r\n              :  <MenuItem icon={<FiLogOut/>} className='menu-item'>Logout</MenuItem>   \r\n              }\r\n              \r\n            </Menu>\r\n          </SidebarFooter>\r\n        </ProSidebar>\r\n        </div>\r\n\r\n  )\r\n}\r\n\r\nexport default MenuSideBar;\r\n\r\n\r\n\r\n  {/*\r\n    <ProSidebar >\r\n      <SidebarContent className='sidebar'>\r\n      <Menu className='menu'>\r\n          <MenuItem className='menu-item'>Home<Link to=\"/\" /></MenuItem>\r\n          <MenuItem className='menu-item'>Perfil<Link to=\"/perfil\" /></MenuItem>\r\n          <MenuItem className='menu-item'>Dashboards<Link to=\"/dashboard\" /></MenuItem>\r\n          <MenuItem className='menu-item'>Calendar Planner<Link to=\"/planner\" /></MenuItem>\r\n          <MenuItem className='menu-item'>Sign In or Sign Up <Link to=\"/signin-signup\" /></MenuItem>\r\n      </Menu>\r\n      </SidebarContent>\r\n    </ProSidebar>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n       <SubMenu title=\"Calendar Planner\" >\r\n          <MenuItem>Diário <Link to=\"/planner\" /></MenuItem>\r\n          <MenuItem>Semana <Link to=\"/planner\" /></MenuItem>\r\n          <MenuItem>Mensal <Link to=\"/planner\" /></MenuItem>\r\n          <MenuItem>Anual  <Link to=\"/planner\" /></MenuItem>\r\n      </SubMenu> \r\n*/}","import './App.css';\nimport React, { Component } from 'react';\n\nimport { Switch, Route, BrowserRouter as Router} from 'react-router-dom';\nimport HomePage from './pages/home/home';\nimport SchedulerPage from './pages/scheduler/scheduler';\nimport PerfilPage from './pages/perfil/perfil';\nimport DiagramsPage from './pages/dashboard/dashboard'\nimport SignInSignUpPage from './pages/signin-signup/signin-signup';\nimport MenuSideBar from './components/menu-side-bar/menu-side-bar'\n\n\n\nclass App extends Component {\n\n  render(){\n\n  return (\n\n    <div className='App'>\n    <Router>\n      <MenuSideBar className='menu'/>\n\n      <div className='content'>\n      <Switch >\n      \n      <Route exact path='/' component={HomePage} />\n      <Route path='/perfil' component={PerfilPage} />\n      <Route path='/scheduler' component={SchedulerPage} />\n      <Route path='/dashboard' component={DiagramsPage} />\n      <Route path='/signin-signup' component={SignInSignUpPage} />\n      \n      </Switch>\n      </div>\n\n    </Router>\n    </div>\n  );\n  }\n}\n\n\n\n\nexport default (App);\n","  \r\nimport {DateActionTypes} from './date.types'\r\n\r\n\r\nconst INITIAL_STATE ={\r\n    selectDate: null\r\n}\r\n\r\nconst selectedDateReducer = (state =  INITIAL_STATE, action) => {\r\n\r\n    switch (action.type){\r\n        case DateActionTypes.SET_SELECTED_DATE:\r\n            return {\r\n                ...state,\r\n                selectDate: action.payload\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport default selectedDateReducer","export const addTaskToList = (listOfTasks, taskToAdd) => {\r\n    return [...listOfTasks, {...taskToAdd}]\r\n}\r\n\r\nexport const removeTaskToList = (listOfTasks, taskToRemove) => {  \r\n    return listOfTasks.filter(t => t.id != taskToRemove.id)\r\n};\r\n\r\nexport const setStatusDowngrade = (listOfTasks, task) => {\r\n    return listOfTasks.map(t => \r\n\r\n        (t.id == task.id && t.status == 'DOING') ?\r\n        {\r\n            ...t, \r\n            status : 'TODO'\r\n        }\r\n\r\n        : (t.id == task.id && t.status == 'DONE') ?\r\n        {\r\n            ...t, \r\n            status : 'DOING'\r\n        } \r\n\r\n        : t\r\n    )\r\n};\r\n\r\nexport const setStatusUpgrade = (listOfTasks, task) => {\r\n    \r\n    return listOfTasks.map(t => \r\n\r\n        (t.id == task.id && t.status == 'DOING') ?\r\n        {\r\n            ...t, \r\n            status : 'DONE'\r\n        }\r\n\r\n        : (t.id == task.id && t.status == 'TODO') ?\r\n        {\r\n            ...t, \r\n            status : 'DOING'\r\n        } \r\n\r\n        : t\r\n\r\n    )\r\n}","import {TaskActionTypes} from './tasks.types'\r\nimport {addTaskToList, removeTaskToList, setStatusDowngrade, setStatusUpgrade} from './task.utils'\r\n\r\nconst INITIAL_STATE ={\r\n    taskList: []\r\n}\r\n\r\nconst taskReducer = (state =  INITIAL_STATE, action) => {\r\n\r\n    switch (action.type){\r\n        case TaskActionTypes.SET_TASKS:\r\n            return {\r\n                ...state,\r\n                taskList: action.payload\r\n            }\r\n        case TaskActionTypes.ADD_TASK:\r\n            return {\r\n                ...state,\r\n                taskList: addTaskToList(state.taskList, action.payload)\r\n            }\r\n        case TaskActionTypes.REMOVE_TASK:\r\n            return {\r\n                ...state,\r\n                taskList: removeTaskToList(state.taskList, action.payload)\r\n            }\r\n        case TaskActionTypes.SET_STATUS_DOWNGRADE:\r\n            return {\r\n                ...state,\r\n                taskList: setStatusDowngrade(state.taskList, action.payload)\r\n            }\r\n        case TaskActionTypes.SET_STATUS_UPGRADE:\r\n            return {\r\n                ...state,\r\n                taskList: setStatusUpgrade(state.taskList, action.payload)\r\n            }\r\n\r\n\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport default taskReducer","import {combineReducers } from 'redux'\r\nimport selectedDateReducer from './date/date.reducer';\r\n\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport taskReducer from './tasks/tasks.reducer';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage\r\n  };\r\n  \r\n  const rootReducer = combineReducers({\r\n      date : selectedDateReducer,\r\n      task : taskReducer\r\n    //user: userReducer,\r\n\r\n})\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware} from 'redux'\r\nimport logger from 'redux-logger'\r\n\r\n\r\nimport rootReducer from './root-reducer'\r\n\r\n// o  middlewarer logger será útil para debuggar, \r\n// já que irá printar o que está acontecendo\r\nconst middlewarers = [logger] \r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewarers))\r\n\r\n\r\n\r\nexport default {store};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//redux\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store';\n\n  //npm run build\n\nReactDOM.render(\n  <Provider store = {store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}